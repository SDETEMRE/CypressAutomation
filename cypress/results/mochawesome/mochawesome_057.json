{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2024-03-11T12:56:25.188Z",
    "end": "2024-03-11T12:56:27.618Z",
    "duration": 2430,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "224756ff-5043-447f-85d8-2d42acf3d925",
      "title": "",
      "fullFile": "cypress/e2e/udemy_lessons/data-tables.cy.js",
      "file": "cypress/e2e/udemy_lessons/data-tables.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d495f1f8-a2b4-4f5f-8b33-2260f261a89d",
          "title": "Handling data via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Calculate and assert the total age of all users",
              "fullTitle": "Handling data via webdriveruni Calculate and assert the total age of all users",
              "timedOut": null,
              "duration": 1060,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let userDetails = [];\nlet numb = 0;\ncy.get(\"#thumbnail-1 td\").each(($el, index, $list) => {\n  userDetails[index] = $el.text();\n}).then(() => {\n  let i;\n  for (i = 0; i < userDetails.length; i++) {\n    if (Number(userDetails[i])) {\n      numb += Number(userDetails[i]);\n    }\n    //cy.log(userDetails[i]);\n  }\n  cy.log(\"Total age : \" + numb);\n  expect(numb).to.eq(322);\n});",
              "err": {},
              "uuid": "936983ba-81ef-42a7-9765-5140515a430d",
              "parentUUID": "d495f1f8-a2b4-4f5f-8b33-2260f261a89d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Calculate and assert the age of a given user based on last name",
              "fullTitle": "Handling data via webdriveruni Calculate and assert the age of a given user based on last name",
              "timedOut": null,
              "duration": 193,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#thumbnail-1 tr td:nth-child(2)\").each(($el, index, $list) => {\n  const text = $el.text();\n  if (text.includes(\"Woods\")) {\n    cy.get(\"#thumbnail-1 tr td:nth-child(2)\").eq(index).next().then(function (age) {\n      const userAge = age.text();\n      expect(userAge).to.equal(\"80\");\n    });\n  }\n});",
              "err": {},
              "uuid": "77b9ddb7-b1a2-456d-b7ae-5cd23005c014",
              "parentUUID": "d495f1f8-a2b4-4f5f-8b33-2260f261a89d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Find the age for given name",
              "fullTitle": "Handling data via webdriveruni Find the age for given name",
              "timedOut": null,
              "duration": 185,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#thumbnail-1 tr td:nth-child(2)\").each(($el, index, $list) => {\n  const lastName = $el.text();\n  if (lastName.includes(\"Smith\")) {\n    cy.get(\"#thumbnail-1 tr td:nth-child(2)\").eq(index).next().then(function (age) {\n      const userAge = age.text();\n      expect(userAge).to.equal(\"45\");\n    });\n  }\n});",
              "err": {},
              "uuid": "2caa9bfa-f87d-4a72-af8a-d689ef9c9098",
              "parentUUID": "d495f1f8-a2b4-4f5f-8b33-2260f261a89d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "936983ba-81ef-42a7-9765-5140515a430d",
            "77b9ddb7-b1a2-456d-b7ae-5cd23005c014",
            "2caa9bfa-f87d-4a72-af8a-d689ef9c9098"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1438,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}